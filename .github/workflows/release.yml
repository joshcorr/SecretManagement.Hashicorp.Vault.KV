---
name: release
on:
  pull_request:
    types: [closed]
    branches:
      - main
      - 1.x
  push:
    branches:
      - main
      - 1.x

jobs:
  publish:
    if: ${{ github.event.pull_request.merged == true || github.actor == 'joshcorr' }}
    name: Publish Module
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Setup PowerShell module cache
        id: cacher
        uses: actions/cache@v2
        with:
          path: "~/.local/share/powershell/Modules"
          key: ${{ runner.os }}-SecretManagement
      - name: Install required PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module -Name Microsoft.PowerShell.SecretManagement -ErrorAction Stop
      - name: Build Module
        shell: pwsh
        run: |
          Copy-Item -path SecretManagement.Hashicorp.Vault.KV/ -Destination /tmp/artifacts/SecretManagement.Hashicorp.Vault.KV/ -Recurse -Force
      # No need for artifacts yet
      # - name: Create Artifact
      #   if: ${{ success() }}
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: SecretManagement.Hashicorp.Vault.KV
      #     path: |
      #       /tmp/artifacts/SecretManagement.Hashicorp.Vault.KV/
      #       /tmp/artifacts/SecretManagement.Hashicorp.Vault.KV/SecretManagement.Hashicorp.Vault.KV.Extension/
      #     if-no-files-found: error
      - name: Get Version
        if: ${{ success() }}
        shell: pwsh
        run: |
          $Version = Test-ModuleManifest -Path /tmp/artifacts/SecretManagement.Hashicorp.Vault.KV/SecretManagement.Hashicorp.Vault.KV.psd1
          echo "tag=$Version.Version.ToString()" >> $GITHUB_ENV
          if ($null -eq $($test.privatedata.psdata.prerelease)) {echo "prerelase=false" >> $GITHUB_ENV} else {echo "prerelase=true" >> $GITHUB_ENV}
      - name: Publish Module
        shell: pwsh
        env:
          NUGET_KEY: ${{ secrets.NUGET_APIKEY }}
        run: |
          Publish-Module -Path /tmp/artifacts/SecretManagement.Hashicorp.Vault.KV -NuGetApiKey $env:NUGET_KEY
      # Need to figure out tagging in pipeline first
      # - name: "Release"
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "SecretManagement.Hashicorp.Vault.KV"
      #     tag: ${{ env.tag }}
      #     prerelease: ${{ env.prerelease }}
      #     bodyFile: "body.md"
      #     token: ${{ secrets.GITHUB_TOKEN }}
